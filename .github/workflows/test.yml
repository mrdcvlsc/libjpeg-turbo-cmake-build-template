name: test

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
  build:
    permissions: write-all

    name: ${{ matrix.platform.name }} ${{ matrix.config.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows VS2019, os: windows-2019,   bin: .\\build\\bin\\Release\\main.exe }
        - { name: Windows VS2022, os: windows-2022,   bin: .\\build\\bin\\Release\\main.exe }
        - { name: Windows Clang,  os: windows-latest, bin: .\\build\\bin\\Release\\main.exe, flags: -G "Visual Studio 17 2022" -A x64 -T ClangCL }
        - { name: Windows GCC,    os: windows-latest, bin: .\\build\\bin\\main.exe,          flags: -G "Unix Makefiles" -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ }
        - { name: MacOS XCode,    os: macos-latest,   bin: ./build/bin/main }
        - { name: Linux GCC,      os: ubuntu-latest,  bin: ./build/bin/main }
        - { name: Linux Clang,    os: ubuntu-latest,  bin: ./build/bin/main,                 flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }
        config:
        - { name: static, flags: -DBUILD_SHARED_LIBS=FALSE }
        - { name: shared, flags: -DBUILD_SHARED_LIBS=TRUE }
        build:
        - { name: Release, flags: -DCMAKE_BUILD_TYPE=Release }
        # - { name: Debug,   flags: -DCMAKE_BUILD_TYPE=Debug }

    steps:

    - name: Install nasm in ubuntu
      continue-on-error: true
      run: sudo apt install nasm

    - name: Install nasm in windows
      continue-on-error: true
      run: choco install nasm

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Configure project
      run: cmake -S . -B build -DCMAKE_INSTALL_PREFIX=install ${{matrix.platform.flags}} ${{matrix.config.flags}} ${{matrix.build.flags}}

    - name: Build ${{matrix.platform.bin}} executable
      run: cmake --build build --config ${{matrix.build.name}}

    - name: Run ${{matrix.platform.bin}} executable
      env:
        DYLD_LIBRARY_PATH: ./turbojpeg/lib
      run: ${{matrix.platform.bin}}
